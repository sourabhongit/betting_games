! function($) { var a, b = [],
        c = !1,
        d = !1,
        e = { interval: 250, force_process: !1 },
        f = $(window);

    function g() { d = !1; for (var e = 0; e < b.length; e++) { var c = $(b[e]).filter(function() { return $(this).is(":appeared") }); if (c.trigger("appear", [c]), a) { var f = a.not(c);
                f.trigger("disappear", [f]) }
            a = c } }
    $.expr[":"].appeared = function(h) { var a = $(h); if (!a.is(":visible")) return !1; var b = f.scrollLeft(),
            c = f.scrollTop(),
            d = a.offset(),
            e = d.left,
            g = d.top; return !!(g + a.height() >= c && g - (a.data("appear-top-offset") || 0) <= c + f.height() && e + a.width() >= b && e - (a.data("appear-left-offset") || 0) <= b + f.width()) }, $.fn.extend({ appear: function(i) { var a = $.extend({}, e, i || {}),
                f = this.selector || this; if (!c) { var h = function() { d || (d = !0, setTimeout(g, a.interval)) };
                $(window).scroll(h).resize(h), c = !0 } return a.force_process && setTimeout(g, a.interval), b.push(f), $(f) } }), $.extend({ force_appear: function() { return !!c && (g(), !0) } }) }(jQuery),
/*!
 * jQuery doTimeout: Like setTimeout, but better! - v1.0 - 3/3/2010
 * http://benalman.com/projects/jquery-dotimeout-plugin/
 * 
 * Copyright (c) 2010 "Cowboy" Ben Alman
 * Dual licensed under the MIT and GPL licenses.
 * http://benalman.com/about/license/
 */
function($) { var b = {},
        a = "doTimeout",
        c = Array.prototype.slice;

    function d(d) { var h, k = this,
            a = {},
            n = d ? $.fn : $,
            e = arguments,
            l = 4,
            f = e[1],
            g = e[2],
            i = e[3];

        function j() { d ? h.removeData(d) : f && delete b[f] }

        function m() { a.id = setTimeout(function() { a.fn() }, g) } if ("string" != typeof f && (l--, f = d = 0, g = e[1], i = e[2]), d ? (h = k.eq(0)).data(d, a = h.data(d) || {}) : f && (a = b[f] || (b[f] = {})), a.id && clearTimeout(a.id), delete a.id, i) a.fn = function(a) { "string" == typeof i && (i = n[i]), !0 !== i.apply(k, c.call(e, l)) || a ? j() : m() }, m();
        else { if (a.fn) return void 0 === g ? j() : a.fn(!1 === g), !0;
            j() } }
    $[a] = function() { return d.apply(window, [0].concat(c.call(arguments))) }, $.fn[a] = function() { var b = c.call(arguments),
            e = d.apply(this, [a + b[0]].concat(b)); return "number" == typeof b[0] || "number" == typeof b[1] ? this : e } }(jQuery), $(".animatedParent").appear(), $(".animatedClick").click(function() { var a = $(this).attr("data-target"); if (void 0 != $(this).attr("data-sequence")) { var c = $("." + a + ":first").attr("data-id"),
            d = $("." + a + ":last").attr("data-id"),
            b = c;
        $("." + a + "[data-id=" + b + "]").hasClass("go") ? ($("." + a + "[data-id=" + b + "]").addClass("goAway"), $("." + a + "[data-id=" + b + "]").removeClass("go")) : ($("." + a + "[data-id=" + b + "]").addClass("go"), $("." + a + "[data-id=" + b + "]").removeClass("goAway")), b++, delay = Number($(this).attr("data-sequence")), $.doTimeout(delay, function() { if (console.log(d), $("." + a + "[data-id=" + b + "]").hasClass("go") ? ($("." + a + "[data-id=" + b + "]").addClass("goAway"), $("." + a + "[data-id=" + b + "]").removeClass("go")) : ($("." + a + "[data-id=" + b + "]").addClass("go"), $("." + a + "[data-id=" + b + "]").removeClass("goAway")), ++b, b <= d) return !0 }) } else $("." + a).hasClass("go") ? ($("." + a).addClass("goAway"), $("." + a).removeClass("go")) : ($("." + a).addClass("go"), $("." + a).removeClass("goAway")) }), $(document.body).on("appear", ".animatedParent", function(d, e) { var c = $(this).find(".animated"),
        a = $(this); if (void 0 != a.attr("data-sequence")) { var b = $(this).find(".animated:first").attr("data-id"),
            f = $(this).find(".animated:last").attr("data-id");
        $(a).find(".animated[data-id=" + b + "]").addClass("go"), b++, delay = Number(a.attr("data-sequence")), $.doTimeout(delay, function() { if ($(a).find(".animated[data-id=" + b + "]").addClass("go"), ++b, b <= f) return !0 }) } else c.addClass("go") }), $(document.body).on("disappear", ".animatedParent", function(a, b) { $(this).hasClass("animateOnce") || $(this).find(".animated").removeClass("go") }), $(window).on("load", function() { $.force_appear() })